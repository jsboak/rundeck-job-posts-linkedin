[ {
  "defaultTab" : "nodes",
  "description" : "Create CSV of companies that have job-postings with \"Rundeck\" in the job descriptions.\n\n## What does this automation do?\nRetrieves a list of posting for jobs that list \"Rundeck\" as one of the prerequisite skills, and sends the output to a recipient via email.\n\n### Note: \nYou **must** have validated your email address using this other Rundeck job. This enforces that the output of this job is sent to a valid PagerDuty email.\nUse [this Rundeck job](https://delegator.myrundeck.com/project/jakesInitialEnterpriseProject/job/show/b57aab78-3f50-4e0d-a485-5e10e693c356) to validate your email address.",
  "executionEnabled" : true,
  "group" : "Rundeck Job Postings",
  "id" : "0d9c1d24-890d-4db9-b857-4b68a14c5c6d",
  "loglevel" : "INFO",
  "name" : "Rundeck-Job-Hunt",
  "nodeFilterEditable" : false,
  "notification" : {
    "onsuccess" : {
      "email" : {
        "attachLog" : "true",
        "attachLogInFile" : true,
        "recipients" : "${option.email_destination}",
        "subject" : "Rundeck Job Search Completed"
      },
      "plugin" : {
        "configuration" : {
          "authentication" : "None",
          "body" : "{\"user_email\":\"${option.email_destination}\",\"message\":\"${job.username}, your Rundeck Job has completed\"}\n",
          "contentType" : "application/json",
          "method" : "POST",
          "noSSLVerification" : "true",
          "remoteUrl" : "https://hooks.slack.com/workflows/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",
          "timeout" : "30000"
        },
        "type" : "HttpNotification"
      }
    }
  },
  "notifyAvgDurationThreshold" : null,
  "options" : [ {
    "description" : "If you want to send this output as a CSV to an email address, enter that here. \nThis can be to multiple emails - separated by commas.\n### Read the note above: make sure you have validated your email using [this Rundeck Job](https://delegator.myrundeck.com/project/jakesInitialEnterpriseProject/job/show/b57aab78-3f50-4e0d-a485-5e10e693c356)",
    "label" : "Email Destination",
    "name" : "email_destination"
  } ],
  "plugins" : {
    "ExecutionLifecycle" : { }
  },
  "scheduleEnabled" : true,
  "schedules" : [ ],
  "sequence" : {
    "commands" : [ {
      "configuration" : {
        "command" : "aws ses get-identity-verification-attributes --identities \"${option.email_destination}"
      },
      "description" : "Check if Email has been verified via SES",
      "nodeStep" : true,
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "hideOutput" : "true",
            "logData" : "false",
            "name" : "identity",
            "regex" : "(.*)"
          },
          "type" : "key-value-data-multilines"
        } ]
      },
      "type" : "localexec"
    }, {
      "description" : "Continue or Run Depending on Email Verification",
      "fileExtension" : "py",
      "interpreterArgsQuoted" : false,
      "script" : "import json\n\nmy_json = json.dumps(@data.identity*@)\n\ndef reason():\n    if \"Success\" in my_json:\n        print(\"Validated Email\")\n        return 0\n    else:\n        # print(\"Invalid or Unvalidated Email\")\n        raise ValueError(\"Invalid or Unvalidated Email\")\n        \nreason()",
      "scriptInterpreter" : "python"
    }, {
      "errorhandler" : {
        "exec" : "touch /tmp/rundeck_jobs_dedupe.csv",
        "keepgoingOnSuccess" : true
      },
      "exec" : "stat /tmp/rundeck_jobs_dedupe.csv",
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "hideOutput" : "true",
            "logData" : "false",
            "name" : "last_mod",
            "regex" : ".*Modify:\\s([\\d-:.\\s]+)\\.\\d+.*"
          },
          "type" : "key-value-data-multilines"
        } ]
      }
    }, {
      "exec" : "stat /tmp/rundeck_jobs_dedupe.csv",
      "plugins" : {
        "LogFilter" : [ {
          "config" : {
            "hideOutput" : "true",
            "logData" : "false",
            "name" : "last_mod",
            "regex" : ".*Modify:\\s([\\d-:.\\s]+)\\.\\d+.*"
          },
          "type" : "key-value-data-multilines"
        } ]
      }
    }, {
      "description" : "LinkedIn Jobs",
      "fileExtension" : "py",
      "interpreterArgsQuoted" : false,
      "script" : "import csv\nimport time\nimport requests\nfrom bs4 import BeautifulSoup\nimport time, os\n\nd=\"@data.last_mod@\"\np='%Y-%m-%d %H:%M:%S'\nfile_size= os.path.getsize(\"/tmp/rundeck_jobs_dedupe.csv\")\n\nepoch = int(time.mktime(time.strptime(d,p)))\n\n# # print(epoch)\n\nnow = int(time.time())\n\n# print(epoch_time)\n\nif now - epoch > 86400 or file_size == 0: #If data hasn't been updated in last 24hrs\n    initial_list = [\"Company\", \"Job Title\", \"State\", \"Full Location\", \"Job Description\"]\n    \n    headers = {\n      'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36'\n    }\n    \n    with open('/tmp/rundeck_jobs.csv', 'w', newline='') as file:\n      writer = csv.writer(file)\n      writer.writerow(initial_list)\n    \n    geoIds = {\n        'Alabama':'102240587',\n        'Alaska':'100290991',\n        'Arizona':'106032500',\n        'Arkansas':'102790221',\n        'California':'102095887',\n        'Colorado':'105763813',\n        'Connecticut':'106914527',\n        'Delaware':'105375497',\n        'Florida':'101318387',\n        'Georgia':'103950076',\n        'Hawaii':'105051999',\n        'Idaho':'102560739',\n        'Illinois':'101949407',\n        'Indiana':'103336534',\n        'Iowa':'103078544',\n        'Kansas':'104403803',\n        'Louisiana':'101822552',\n        'Maine':'101102875',\n        'Maryland':'100809221',\n        'Massachusetts':'101098412',\n        'Michigan':'103051080',\n        'Minnesota':'103411167',\n        'Mississippi':'106899551',\n        'Missouri':'101486475',\n        'Montana':'101758306',\n        'Nebraska':'101197782',\n        'Nevada':'101690912',\n        'New Hampshire':'103532695',\n        'New Jersey':'101651951',\n        'New Mexico':'105048220',\n        'New York':'105080838',\n        'North Carolina':'103255397',\n        'North Dakota':'104611396',\n        'Ohio':'106981407',\n        'Oklahoma':'101343299',\n        'Oregon':'101685541',\n        'Pennsylvania':'102986501',\n        'Rhode Island':'104877241',\n        'South Carolina':'102687171',\n        'South Dakota':'100115110',\n        'Tennessee':'104629187',\n        'Texas':'102748797',\n        'Utah':'104102239',\n        'Vermont':'104453637',\n        'Virginia':'101630962',\n        'Washington':'103977389',\n        'West Virginia':'106420769',\n        'Wisconsin':'104454774',\n        'Wyoming':'100658004',\n        'Australia':'101452733',\n        'New Zealand':'105490917',\n        'England':'102299470',\n        'Germany':'101282230'\n    }\n    \n    for geoLabel,geoId in geoIds.items():\n    \n      for i in range(0, 25, 200):\n        \n        if i == 0:\n          start = \"\"\n        else:\n          start = \"&start=\" + str(i)\n    \n        url = \"https://www.linkedin.com/jobs-guest/jobs/api/seeMoreJobPostings/search?geoId=\" + geoId + \"&keywords=rundeck&location=California%2C%20United%20States&position=0\" + start\n    \n      # print(url)\n    \n        page = requests.get(url, headers=headers)\n    \n        results = BeautifulSoup(page.content, \"html.parser\")\n    \n        # print(results.prettify())\n    \n        job_elements = results.find_all(\"li\")\n        \n        for job_element in job_elements:\n    \n          company_name = job_element.find(\"h4\", class_=\"base-search-card__subtitle\").text.strip()\n    \n          job_title = job_element.find(\"h3\", class_=\"base-search-card__title\").text.strip()\n    \n          #print(company_name + \" \" + job_title)\n          location = job_element.find(\"span\", class_=\"job-search-card__location\").text.strip()\n    \n          links = job_element.find_all(\"a\")\n          for link in links:\n            link_url = link[\"href\"]\n    \n            if \"?trk=public_\" not in link_url: # and \"anovaa\" in link_url:      \n    \n              job_description = link_url\n    \n              time.sleep(0.5)\n    \n            with open('/tmp/rundeck_jobs.csv', 'a', newline='') as file:\n    \n              writer = csv.writer(file)\n    \n              writer.writerow([company_name, job_title, geoLabel, location, job_description])\n    \n    with open('/tmp/rundeck_jobs.csv','r') as in_file, open('/tmp/rundeck_jobs_dedupe.csv','w') as out_file:\n        seen = set() # set for fast O(1) amortized lookup\n        for line in in_file:\n            if line in seen: continue # skip duplicate\n    \n            seen.add(line)\n            out_file.write(line)\nelse:\n    print(\"Data was updated in the last 24hrs, not rerunning webcrawler.\")",
      "scriptInterpreter" : "python3"
    }, {
      "configuration" : {
        "command" : "cat /tmp/rundeck_jobs_dedupe.csv"
      },
      "description" : "Print CSV File",
      "nodeStep" : true,
      "type" : "localexec"
    } ],
    "keepgoing" : false,
    "strategy" : "node-first"
  },
  "uuid" : "0d9c1d24-890d-4db9-b857-4b68a14c5c6d"
} ]